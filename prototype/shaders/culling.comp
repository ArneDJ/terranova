#version 460 core

layout(local_size_x = 16, local_size_y = 1, local_size_z = 1) in;

struct IndexedIndirectCommand {
	uint indexCount;
	uint instanceCount;
	uint firstIndex;
	uint vertexOffset;
	uint firstInstance;
};

layout (std430, binding = 0) writeonly buffer commands
{
	IndexedIndirectCommand indirect_draws[];
};

layout (std430, binding = 1) readonly buffer transforms
{
	vec4 transform_SSBO[];
};

struct MatrixBufferRows {
	vec4 rows[4];
};

layout (std430, binding = 2) buffer transform_matrices_SSBO
{
	MatrixBufferRows transform_matrices[];
};

layout (binding = 3) uniform UBO {
	vec4 frustum_planes[6];
} ubo;

bool sphere_intersection(vec4 pos, float radius)
{
	for (int i = 0; i < ubo.frustum_planes.length(); i++) {
		if (dot(pos, ubo.frustum_planes[i]) + radius < 0.0) {
			return false;
		}
	}

	return true;
}

void main()
{
	uint idx = gl_GlobalInvocationID.x;

	vec4 position = transform_SSBO[idx];

	if (sphere_intersection(position, position.w)) {
		indirect_draws[idx].instanceCount = 1;
		transform_matrices[idx].rows[3] = position;
	} else {
		indirect_draws[idx].instanceCount = 0;
	}
}
